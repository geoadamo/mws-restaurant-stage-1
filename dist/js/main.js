let restaurants,neighborhoods,cuisines;var map,observer,markers=[];let imgLoaded=[];window.initMap=(()=>{self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1}),self.restaurants&&0==self.markers.length&&addMarkersToMap()}),window.addEventListener("offline",e=>{toggleOffline(!0)}),window.addEventListener("online",e=>{toggleOffline(!1)}),toggleOffline=((e,t=!0)=>{e?document.getElementById("offline").style.visibility="visible":(document.getElementById("offline").style.visibility="hidden",t&&DBHelper.syncOfflineData())}),document.addEventListener("DOMContentLoaded",e=>{console.log("domloaded"),toggleOffline(!navigator.onLine,!1),createObserver(),fetchNeighborhoods(),fetchCuisines(),navigator.onLine?DBHelper.syncOfflineData().then(()=>{updateRestaurants()}):updateRestaurants()}),createObserver=(()=>{self.observer=new IntersectionObserver(handleIntersect,{root:null,rootMargin:"0px 0px 0px 0px"})}),handleIntersect=((e,t)=>{e.forEach(function(e){e.isIntersecting&&!imgLoaded.includes(e.target.getAttribute("data-id"))&&(lazy_load(e.target),self.observer.unobserve(e.target))})}),lazy_load=(e=>{let t=parseInt(e.getAttribute("data-id"));imgLoaded.push(t);let r=self.restaurants.find(function(e){return e.id===t}),a=document.getElementById(`img-${t}`);a.setAttribute("src",DBHelper.imageUrlForRestaurant(r,!0)),a.style.visibility="visible"}),fetchNeighborhoods=(()=>{DBHelper.fetchNeighborhoods((e,t)=>{e?console.error(e):(self.neighborhoods=t,fillNeighborhoodsHTML())})}),fillNeighborhoodsHTML=((e=self.neighborhoods)=>{const t=document.getElementById("neighborhoods-select");e.forEach(e=>{const r=document.createElement("option");r.innerHTML=e,r.value=e,t.append(r)})}),fetchCuisines=(()=>{DBHelper.fetchCuisines((e,t)=>{e?console.error(e):(self.cuisines=t,fillCuisinesHTML())})}),fillCuisinesHTML=((e=self.cuisines)=>{const t=document.getElementById("cuisines-select");e.forEach(e=>{const r=document.createElement("option");r.innerHTML=e,r.value=e,t.append(r)})}),updateRestaurants=(()=>{const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),r=e.selectedIndex,a=t.selectedIndex,s=e[r].value,n=t[a].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(s,n,(e,t)=>{e?console.error(e):(resetRestaurants(t),fillRestaurantsHTML(),document.getElementById("filtered-results").innerHTML=`<p>${t.length} Results</p>`)})}),resetRestaurants=(e=>{self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers.forEach(e=>e.setMap(null)),self.markers=[],self.restaurants=e}),fillRestaurantsHTML=((e=self.restaurants)=>{const t=document.getElementById("restaurants-list");e.forEach(e=>{t.append(createRestaurantHTML(e))}),self.map&&addMarkersToMap()}),createRestaurantHTML=(e=>{const t=document.createElement("div");t.className="restaurant-item",t.setAttribute("data-id",e.id);const r=document.createElement("img");r.className="restaurant-img",r.setAttribute("id",`img-${e.id}`),r.style.visibility="hidden",r.alt=e.name+` ${e.cuisine_type} Restaurant`,t.append(r);const a=document.createElement("h2");a.innerHTML=e.name,t.append(a);const s=document.createElement("p");s.innerHTML=e.neighborhood,t.append(s);const n=document.createElement("p");n.innerHTML=e.address,t.append(n);const i=document.createElement("a");i.innerHTML="View Details",i.setAttribute("aria-label",`View details about ${e.name} Restaurant`),i.href=DBHelper.urlForRestaurant(e),t.append(i);const o=document.createElement("img");return o.className="favorite",o.setAttribute("id",`fav-${e.id}`),o.src="icons/notfavorite.png",o.setAttribute("role","button"),o.alt="Click to mark as favorite!",o.setAttribute("title","Click to mark as favorite!"),o.setAttribute("aria-label","Press enter to mark as favorite!"),o.setAttribute("tabindex",0),o.setAttribute("data-is-favorite","false"),e.is_favorite&&DBHelper.parseBoolean(e.is_favorite)&&(o.src="icons/favorite.png",o.setAttribute("data-is-favorite","true"),o.setAttribute("title","Click to mark as not favorite!"),o.setAttribute("aria-label","Press enter to mark as not favorite!")),t.append(o),o.addEventListener("click",e=>{toggleFavorite(e.target)}),o.addEventListener("keydown",e=>{13==e.keyCode&&toggleFavorite(e.target)}),self.observer.observe(t),t}),toggleFavorite=(e=>{let t=e.getAttribute("id").split("-")[1],r=DBHelper.parseBoolean(e.getAttribute("data-is-favorite"));DBHelper.toggleFavorite(t,!r),1==!r?(e.src="icons/favorite.png",e.setAttribute("data-is-favorite","true"),e.setAttribute("title","Click to mark as not favorite!"),e.setAttribute("aria-label","Press enter to mark as not favorite!"),document.getElementById("filtered-results").innerHTML="<p>Υου marked as favorite</p>"):(e.src="icons/notfavorite.png",e.setAttribute("data-is-favorite","false"),e.setAttribute("title","Click to mark as favorite!"),e.setAttribute("aria-label","Press enter to mark as favorite!"),document.getElementById("filtered-results").innerHTML="<p>Υου marked as not favorite</p>")}),addMarkersToMap=((e=self.restaurants)=>{e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",()=>{window.location.href=t.url}),self.markers.push(t)})});